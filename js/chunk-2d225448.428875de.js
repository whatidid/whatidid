(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d225448"],{e458:function(a,i,e){"use strict";e.r(i);var n=function(){var a=this,i=a.$createElement,e=a._self._c||i;return e("div",[e("div",{staticClass:"text-h5 pb-6 primary--text"},[a._v(a._s(a.$t("titles.aty"))+"-1")]),e("div",{staticClass:"text-body-1 py-6 pl-4 pb-4 white"},[e("v-row",{staticClass:"pa-6",attrs:{align:"start"}},[e("v-item-group",{staticClass:"mr-6",attrs:{mandatory:""},model:{value:a.window,callback:function(i){a.window=i},expression:"window"}},a._l(a.articles,(function(i,n){return e("v-item",{key:n,scopedSlots:a._u([{key:"default",fn:function(i){var n=i.active,l=i.toggle;return[e("div",[e("v-btn",{attrs:{"input-value":n,icon:""},on:{click:l}},[e("v-icon",[a._v("mdi-record")])],1)],1)]}}],null,!0)})})),1),e("v-col",[e("v-window",{staticClass:"elevation-1",attrs:{vertical:""},model:{value:a.window,callback:function(i){a.window=i},expression:"window"}},a._l(a.articles,(function(i,n){return e("v-window-item",{key:n},[e("v-card",{attrs:{flat:""}},[e("v-card-text",[e("v-row",{staticClass:"mb-4",attrs:{align:"center"}},[e("div",{staticClass:"text-h6 pl-3 font-weight-bold"},[a._v(" "+a._s(i.title)+" ")])]),e("div",{staticClass:"pb-2 white font-weight-bold"},[a._v(" "+a._s(a.$t("lastUpdate"))+": "+a._s(i.lastUpdate)+" ")]),e("span",{domProps:{innerHTML:a._s(i.html)}}),i.assignment?e("div",[e("div",{staticClass:"pb-2 white font-weight-bold text-subtitle-1 primary--text",on:{click:function(e){return e.stopPropagation(),a.viewAssignment(i.assignment)}}},[a._v(" "+a._s(i.assignment.title)+" ("+a._s(a.$t("deadline"))+": "+a._s(i.assignment.deadline)+") ")])]):a._e()],1)],1)],1)})),1)],1)],1)],1),e("v-dialog",{attrs:{width:"65%"},model:{value:a.dialog,callback:function(i){a.dialog=i},expression:"dialog"}},[e("v-card",[e("v-card-title",[e("span",{staticClass:"text-h5"},[a._v(a._s(a.dialogAssignment.title))])]),e("v-card-text",[e("div",{staticClass:"pb-2 white font-weight-bold"},[a._v(" "+a._s(a.$t("lastUpdate"))+": "+a._s(a.dialogAssignment.lastUpdate)+" "+a._s(a.$t("deadline"))+": "+a._s(a.dialogAssignment.deadline)+" ")]),e("span",{domProps:{innerHTML:a._s(a.dialogAssignment.html)}})])],1)],1)],1)},l=[],r={name:"Aty1",data:function(){return{lastUpdate:"9.10.2021",dialog:!1,dialogAssignment:{},window:0,articles:[{title:"1. Mevcut gelişmişlik durumunun farkında olmak",lastUpdate:"09.10.2021",html:'<p>\n                    Araştırma ve tasarım yapmanın ilk adımı, ilgili konuda\n                    mevcut bilgi ve teknoloji düzeyinin farkına varmaktır.\n                    Araştırmacı veya tasarımcı, özellikle ilgi alanında\n                    çevresinde ve dünyada olan bitenlerden haberdar olmalıdır.\n                    Lisansüstü çalışmalara literatür taraması ile başlanmalıdır.\n                    Litratür taraması lisans seviyesinde biraz ağır gelebilir.\n                    Bunun yerine öğrencilikten itibaren gelişmeleri takip etmek\n                    için zaman zaman yapılması gereken bazı şeyler vardır:\n                  </p>\n                  <p>\n                    ● Katalog incelemek<br />\n                    Bunlar temel elektrik-elektronik, mekanik, sensör, bağlantı\n                    elemanları vb kataloglar olabileceği gibi, motor, ölçü\n                    aleti, güç kaynağı vb cihaz ve araç katalogları da olabilir.\n                    Erişilebilir elemanlar hakkında fikriniz olmalıdır. İhtiyaç\n                    duyduğunuzda "şöyle bir eleman vardı" diyerek ayrıntılı\n                    bilgi için tekrar dönebilmeniz için elemanın ne işe\n                    yaradığına ve fiyatlarına biraz bakmalısınız. En azından\n                    ilginizi çekenlerin kullanımına da bakmalısınız.\n                  </p>\n                  <p>\n                    ● Programlama dillerine ve komutlarına göz gezdirmek<br />\n                    Çoğu kişinin zannettiğinin aksine günümüzde "yazılım" ayrı\n                    bir alan değildir; hemen her alanın adeta beynidir. Nota\n                    bilmeden belki müzisyen olabilirsiniz, ama yazılım bilmeden\n                    mühendis olamazsınız. Okur-yazarlık gibi bir zarurettir bu.\n                    Hatta bir programlama dili bilmeniz de yetmez; herhangi bir\n                    programlama dilinde yazılmış bir programda en azından\n                    yapılan işi anlayabilecek ve değişiklik yapabilecek kadar\n                    çoğu programlama dili hakkında kavramsal bilgi sahibi\n                    olmalısınız.<br />\n                    Bu amaçla çeşitli programlama dilleri hakkında genel\n                    bilgiler edinmeli, bazı komutlarının ne işe yaradığını ve\n                    nasıl kullanıldığını öğrenmelisiniz. Belli başlı kod\n                    parçacıklarını anlayabilmelisiniz.<br />\n                    En geç son sınıftayken, en az bir assembly dilinde belli\n                    başlı komutları da öğrenmelisiniz. PIC, arduino gibi\n                    mikrodenetleyiciler için hazırlanmış ve çok gelişmiş stüdyo\n                    programları sizi kendilerine muhtaç tutmaya çalışır. Onları\n                    da kullanın ama gerektiğinde byte hatta bit seviyesinde\n                    müdahale edecek kadar assembly komutlarına aşinalık\n                    kazanmalısınız. Aksi halde şöyle gülünç bir duruma\n                    düşebilirsiniz: Mikrodenetleyiciye (özellikle arduinoya) bir\n                    iş yaptıran program yaptığınızı iddia edebilirsiniz; ama\n                    belki de siz onu programlayan değil sadece kullanansınızdır.\n                  </p>\n                  <p>\n                    ● Bilimsel ve teknolojik magazinlerdeki ilgili haberleri\n                    izlemek.<br />\n                    Sıradan günlük gazetelerdeki bilim/teknoloji haberlerini\n                    kastetmiyoruz, onlardan haberdar olmak da iyidir; ancak\n                    onlara çok güvenmeyiniz, çoğu ne yazdığını kendisi de\n                    bilmeden yazar. Verilen haberin <i>troll</i> veya hatalı\n                    olup olmadığını yorumlayabilmelisiniz. Olmayacak şeyleri\n                    ayırt edebilmeli, şüpheli durumlarda gösterilen kaynağın\n                    orijinal yayınına kadar gitmeye üşenmemelisiniz. Günümüzde\n                    internet üzerinden resim araması ve çeviri gibi pek çok\n                    hizmet verilmektedir. Bu imkânları doğru ve yerinde\n                    kullanmamak büyük vebaldir. Meselâ "<i\n                      >kaya içinde 500 bin yıllık çekiç bulundu</i\n                    >" haberinde verilen resmi, bir arama motorunda aratırsanız\n                    sadece ciddiyetten uzak ve maalesef Türkçe sosyal medya\n                    kaynaklarında olduğunu görerek <i>troll</i> olduğunu\n                    anlarsınız. Diğer yandan <i>troll</i>müş gibi görünen "<i\n                      >Ay\'dan getirildi diye Hollanda\'ya hediye edilen taş,\n                      tahta çıktı</i\n                    >" haberini aratırsanız, ciddi ve resmi kaynaklı bir BBC\n                    haberi olduğunu görürsünüz.\n                  </p>\n\n                  <p>\n                    Zaman zaman bu tür göz gezdirmelerin başlıca faydaları\n                    aşikâr olmakla birlikte şöyle sıralanabilir:\n                  </p>\n\n                  <p>\n                    1) Tasarımcı hangi tasarım elemanları ile tasarım yapması\n                    gerektiğini bilir. Bir alt iş fonksiyonu gerçekleştirmek\n                    için hazır olan bir eleman kullanmak gayet ekonomik ve\n                    mantıklı iken onu daha alt elemanlarla tasarlamak gibi\n                    gereksiz bir karmaşaya girmez. O yeteneklerini, zamanını ve\n                    enerjisini, öyle küçük işlere değil, daha önemli tasarımlara\n                    yöneltir.\n                  </p>\n\n                  <p>\n                    2) Elemanların fiyat ve erişim süreleri hakkında da fikir\n                    edinir. Hangi elemanların teslimat sürecinin uzun olduğunu\n                    bilirse iş planını da ona göre yapar.\n                  </p>\n\n                  <p>\n                    3) Varlığından haberdar olduğu her eleman, ona yeni ufuklar\n                    kazandırır, daha iyi fikirler üretmesine yardımcı olur.\n                    Mesela GSM modülünün varlığından haberdar olan bir\n                    tasarımcı/geliştirici, uzaktan bilgi alıp verneye, komutlar\n                    göndermeye dair pek çok tasarım fikri geliştirebilir.\n                    İnsanlar gördükleri bildikleri şeyler cinsinden fikir üretme\n                    eğilimindedirler. Meselâ yaklaşık 100 yıl önceki insanlara\n                    100 yıl sonra dünyanın teknoloji seviyesini hayal etmeleri\n                    istenmiş. Birileri de bu hayalleri çizmiş. İnternette bulup\n                    o resimlere bakarsanız daha iyi anlarsınız. Çoğu tasarım\n                    hayallerinde enerji kaynağı olarak buhar tüttürmüşler.\n                  </p>\n\n                  <p>\n                    4) İlgili normlara ve kavramlara aşinalık kazandırır. Aşina\n                    olmayan kişi ise bunları sıfırdan keşfetmek veya kurgulamak\n                    zorunda kalır. Meselâ ilk cep telefonlarından birinin menü\n                    tasarımını yapma görevi o zamanlarda size verilmiş olsaydı\n                    bir çok şeyi kurgulamak için çok zaman ve emek harcardınız.\n                    Halbuki şimdi böyle bir görev verilse çoğunuz kolayca kendi\n                    menü tasarımınızı yapabilirsiniz.\n                  </p>\n\n                  <p>\n                    5) Yanıltıcı verilere aldanmaktan korunursunuz. Meselâ iyi\n                    aydınlatan bir lamba ya da iyi çeken bir süpürge almak için\n                    çoğu insan harcanan watt değerine bakar. Halbuki normlarla\n                    biraz ilgilenmiş bir insan aydınlatma ölçüsü olan lümen\n                    değerine ya da süpürgenin emiş gücüne bakar. Yüksek akımlı\n                    bir MOSFET\'i çok ucuz zannedebilirsiniz. Ama katalog okumayı\n                    bilirseniz o akımın kısa süreli (peak) olup olmadığı veya\n                    soğutucu kullanılırkenki akım olduğu gibi bilgileri fark\n                    edersiniz.\n                  </p>\n\n                  <p>\n                    6) Yasal kısıtlamalardan haberdar olursunuz. Meselâ\n                    satacağınız cihazda zehirli olduğu için fazla ve standartsız\n                    lehim kullanamazsınız, çevredeki diğer cihazları etkileyecek\n                    kadar elektromanyetik dalga yayamazsınız.\n                  </p>\n\n                  <p>\n                    Bu gibi nedenlerle iyi bir mühendis veya adayı mevcut\n                    şartların farkında olmalıdır.\n                  </p>',assignment:{title:"Ödev-1",lastUpdate:"09.10.2021",deadline:"24.10.2021",html:'<p>DİKKAT: Bu ödevde istenen türden fakat okulda zaten öğretilen veya çoğu öğrenci tarafından bilinen şeyleri (PIC, arduino, 555, yaygın kullanılan program komutları vb) veya geçmişte kalan program dillerinden (Fortran, Pascal vb) komutlar seçip yazmanız geçersiz sayılacaktır. Çünkü ödevin amacı kabuğunuzdan çıkıp ufkunuzu geliştirmenizdir.</p>\n<p><b><font color="red">1)</font></b> Çeşitli katalogları karıştırıp elektrik-elektronik, mekanik, sensör vb elemanların özelliklerine bakınız. İlginizi çekenlerin teknik özelliklerini de inceleyiniz. Daha da ilginizi çekenlerin katalogda verilen şekliyle kullanımlarını da inceleyiniz. Bu elemanlarla neler yapabileceğinizi düşününüz.<br>\n<br>\nBunlar arasından OKULDA ÖĞRETİLMEYEN ve birbirine çok benzemeyen iki ayrı elemanı KENDİNİZE AİT 1-2 CÜMLE İLE kısaca tanıtınız. Linkte verilecek formu doldurarak teslim ediniz.<br>\n<a href="https://docs.google.com/forms/d/e/1FAIpQLSfGK2BKo0q7MWaKHFGiCD1-6P85gdkB_MBjh7qHoN-jKz0Kew/viewform">Burayı tıklayıp</a> açılan formu örnekteki gibi doldurarak teslim ediniz. İki eleman için aynı formu AYRI AYRI doldurup gönderiniz.</p>\n<p><b>Örnek:</b><br>\nParça No: LM285Z<br>\nParça Adı: Mikrobesleme Voltaj Referans Diyodu<br>\nİşlevi: Bir çeşit zener diyot gibi ters kırılma durumunda kullanılır ve hassas bir şekilde 2.5V verir. 2.5V referans voltajı elde etmeye yarar.<br>\nDüşündüğüm bazı uygulamaları: Batarya voltajı gibi dar bir aralıkta değişen voltajları daha yüksek çözünürlükle ölçmek için 2.5V\'tan farkını ölçmek iyi bir fikir olabilir. Bunun için 2.5V çıkışı ADC elemanının VREF- ucuna bağlanabilir. Ayrıca basit kalibrasyon işlerinde de kullanılabilir.<br>\nFiyatı: 4,16 TL<br>\nLink: <a href="https://www.direnc.net/lm285z-2v5-voltage-ref-shunt-25v-to-226aa-3">https://www.direnc.net/lm285z-2v5-voltage-ref-shunt-25v-to-226aa-3</a></p>\n\n<p><b><font color="red">2)</font></b> Çeşitli programlama dilleri ve komutlarının açıklamalarına göz gezdiriniz.<br>\nBunlar arasından OKULDA ÖĞRETİLMEYEN ve birbirine çok benzemeyen iki ayrı komutu KENDİNİZE AİT 1-2 CÜMLE İLE kısaca tanıtınız. Linkte verilecek formu doldurarak teslim ediniz.<br>\n<a href="https://docs.google.com/forms/d/e/1FAIpQLSeV9mFfIxP017WTRq6sO1PQi2H_j1b-P0T-Zjsar6NIZctDmw/viewform">Burayı tıklayıp</a> açılan formu örnekteki gibi doldurarak teslim ediniz. İki komut için aynı formu AYRI AYRI doldurup gönderiniz.</p>\n<p><b>Örnek:</b><br>\nAit olduğu dil: SVG<br>\nBu dilin kullanıldığı yer ve amaçlar: İnternetteki html dosyaları içinde değişken boyutlandırılabilir ve animasyonlu da yapılabilen şekiller çizdirmek.<br>\nKomut adı: <font style="font-family:courier">&lt;circle&gt;</font><br>\nİşlevi: İstenen özelliklerde daire çizdirmek.<br>\nKullanım örneği:<br><font style="font-family:courier">\n&lt;svg height="200" width="150"&gt;<br>\n  &lt;circle cx="60" cy="70" r="50" stroke="black" stroke-width="4" fill="blue" /&gt;<br>\n&lt;/svg&gt;</font><br>\nAçıklaması: SVG çizimi için 200 pixel yükseklikte ve 150 pixel genişlikte ayrılmış alanın sol üst köşesinden 60 pixel sağda, 70 pixel aşağıda merkezi olan, 50 pixel yarıçapında mavi bir daire çizdirir. Çevresine de 4 pixel kalınlığında siyah bir çizgi çizer. Çizgi kalınlığının yarısı mavi daire alanını kaplarken yarısı da dış alanda yer alır.<br>\nLink: <a href="https://www.w3schools.com/graphics/svg_circle.asp">https://www.w3schools.com/graphics/svg_circle.asp</a></p>\n<p><b><font color="red">3)</font></b> <u>Birkaç dakikalık</u> ilginç bir teknolojik video linki veriniz. Videoyu önce kendiniz izleyip KENDİ İFADELERİNİZLE videoda tanıtılan şeyi kısaca yazınız.<br>\n<a href="https://docs.google.com/forms/d/e/1FAIpQLSdHk_gksjJGeGV2MeZBWaAnR8AZLy194MDYSbJkmM9nte42Qw/viewform">Burayı tıklayıp</a> açılan formu örnekteki gibi doldurarak teslim ediniz. Kendiniz yeterince kısa tanım ve yorum vermezseniz bu kısmı teslim etmemiş sayılırsınız.</p>\n<p><b>Örnek:</b><br>\nLink: <a href="https://www.youtube.com/watch?v=KT9gyBofSUo">https://www.youtube.com/watch?v=KT9gyBofSUo</a><br>\nİçerik: Işığın bir şişeden geçerken birkaç nanosaniyelik ilerlemesi, izlenebilir bir yavaşlıkta video yapılmış.<br>\nYorum: Tahminim, ışık kesikli ama periyodik olarak gönderilirken, çok kısa poz süreli çok sayıda görüntü alınıp, yakalanan ışığın konum sırasına göre birleştirilmiş olmalı.</p>'}},{title:"2. Özgeçmiş Hazırlamak",lastUpdate:"2.11.2021",html:"<p>Bir işe, lisansüstü eğitime ve bazen de staja başvururken özgeçmiş istenir. İyi bir özgeçmiş hazırlamak için faydalanabileceğiniz pek çok kaynak internette kolayca bulunabilir. Bu bilgileri ve örnekleri o kaynaklara havale edip burada sadece birkaç ilave not vererek bu konuyu geçeceğim. Önce çeşitli kaynaklardaki anlatımları, tavsiyeleri ve örnekleri arayıp bulup incelemenizi, sonra da aşağıya yazdığım ilave notları okumanızı öneriyorum. Ayrıca internette araştırdıklarınız arasında en beğendiğiniz,\n<br>● Özgeçmiş hazırlama anlatımı linkini,\n<br>● Özgeçmiş örnekleri linkini ve beğendiğiniz birkaç örneği\n<br>indirip kaydediniz.</p>\n\n<h3>İlave notlar:</h3>\n\n<p><b>1)</b> Özgeçmişinizde mutlaka bulunması gereken hususlar:<br>\nİsim, iletişim bilgileri, doğum tarihi, farklı ise uyruk, medeni hal (ve varsa çocuk durumu), üniversite veya liseden itibaren eğitim geçmişi, varsa yabancı dil seviyesi, varsa çalışma geçmişi (yeni mezunlar için staj da söylenebilir), varsa projeler, başvurulan pozisyon, başvurulan pozisyonla ilgili yetenekler ve varsa sertifikalar.</p>\n<p><b>2)</b> Basit konularda (Word, Excel gibi) sertifika sunmak veya bildiğini söylemek, belki bazı kamu kurumlarında işe yarayabilir ama genellikle pek birşey bilmediğinizin göstergesidir.</p>\n<p><b>3)</b> Sizin beğendiğiniz bir resim başkalarının gözünde, beğenmediğiniz bir resimden daha kötü olabilir. İnsanlar kendi resimlerine bakınca hemen kusur ararlar, halbuki başkaları bunları görmez. Bir yakınınızın fikrini alınız.</p>\n<p><b>4)</b> Başvurulan pozisyon için olumlu olacağını düşündüğünüz özelliklerinizi fazla abartmadan ve yalana kaçmadan öne çıkarabilirsiniz.</p>\n<p><b>5)</b> Özgeçmişe 1 dakikadan az bakılıp elenme ihtimalini düşünerek dikkat çekici tasarımlara yönelmek oldukça yaygınlaşmıştır. Ama dikkat çekmeyi de dozunda bırakmalısınız, fazlası itici bulunacaktır. Bu yüzden özgeçmişinizi, kusurlarınızı söyleyebilecek dostlarınıza gösterip eleştirilerini alınız.</p>\n<p><b>6)</b> Referanslarınızın sizin hakkınızda söylediklerinden çok, kim oldukları, çevrede ne gibi izlenim bıraktıkları önemlidir. Genellikle referans isimlere sizi sormazlar, onaların nasıl kimseler olduklarına bakarlar. Eksi ile artının çarpımının eksi olduğunu unutmayınız. Kötü izlenim bırakmış olabilecek birisini sırf makam veya ünvanlı diye referans göstermeniz tavsiye edilmez.</p>\n<p><b>7)</b> Her zaman hazırda bir özgeçmiş bulundurunuz. Durumunuzdaki her önemli değişiklikte bunu güncelleyiniz. Başvurduğunuz her pozisyon için özgeçmişinizde ayrıca ufak tefek düzenlemeler yapmanız gerekebilir. Son güncelleme tarihini de yazmanız iyi olur.</p>\n<p><b>8)</b> Özgeçmiş, diploma ve kimlik gibi çok gizli olmayan bilgi ve belgelerinizin görüntülerini (tercihen pdf) internetten kolayca erişebileceğiniz bir ortamda saklamanız tavsiye edilir. Aniden gerektiğinde hemen erişebilmelisiniz. Hatta güveniyorsanız karşı tarafa verecek birer paylaşım linki hazır olsa iyi olur.</p>\n"},{title:"3. Blok Şemalar",lastUpdate:"2.11.2021",html:'<a href="/projeders/aty1_konu03_blok_semalar.ppsx"><i class="v-icon notranslate mdi mdi-download theme--light primary--text"></i> Blok Şemalar</a>'},{title:"4. Hata Bulmak",lastUpdate:"25.11.2021",html:'<p>Tasarım veya uygulamaların geliştirme/gerçekleştirme aşamasında hatalar yapmak adeta kaçınılmazdır. Yapılan hatalar bazen kolayca bulunur, bazen uzun uğraşlar sonucu bulunur; bazen hiç bulunamadığı da olur. Bulunan her hata tecrübeyi artırır. Ancak metotsuzca hata bulmaya çalışmak çok zaman kaybına yol açabilir, çalışma şevkini kırar ve araştırmacı/geliştirmeciyi şaşkın bir vaziyette bırakabilir. Hatta o işin ya da o araştırmacı/geliştirmecinin gözden çıkarılmasıyla sonuçlanabilir. İşi bir başkasına yaptırma çözümü de “neden yeterince gelişemiyoruz?” sorusunun cevaplarından birisi olur. Halbuki ister hesaplamalarda, ister yazılımda, ister  mekanik veya devre tasarımında veya bunların simülasyonu veya fiziksel gerçekleştirilmesinde olsun, karşılaşılan hataları bulmanın ortak bir metodu vardır.</p>\n\n<h3>4.1 Yüzeysel Bakış</h3>\n\n<p>Üstten yüzeysel ve hızlı bir bakışla bariz bazı hatalar görülebilir. Mesela devrede yanıp kararmış bir eleman veya yazılımda açıkça anlaşılan hata mesajı gibi. Sisteme enerji gelmemesi de genellikle yüzeysel bakışla fark edilebilecek hatalardandır. Tecrübelere göre mevcut problem için en sık karşılaşılan hata nedenlerine bakmak da bu sınıftan sayılabilir.</p>\n<p>Aslında bu maddede sayılanlar belirli bir metot değil, biraz zaman alabilen asıl metoda hiç girmeden, varsa kısa yoldan hatayı görme ihtimallerini değerlendirmektir. Kısa yoldan yüzeysel bakışla bulunamayan hatalar için asıl metot, sonraki adımlardadır.</p>\n<h3>4.2. Neden Çalışsın ki?</h3>\n<p>Bir mühendisin bir sistem hakkında, “neden çalışmıyor?” sorusundan önce, “neden çalışsın ki?” sorusunun cevabına ulaşması gerekir. Zira normalde bir sistemin çalışması için pek çok şartın birden sağlanması gerekir; çalışmaması için ise küçük bir şartın sağlanmaması yeterli olabilir. Tasarlayıcı kendimiz isek bu soru daha da önem kazanır. Çünkü önceden doğrulanmamış çalışma için tasarımda yanlışlar olması kuvvetle muhtemeldir. Başkaları tarafından tasarlanmış ve doğrulandığı söylenen bir sistem için ise çalışmama nedeni muhtemelen bizim bir hatamız veya eksiğimizdir.</p>\n<p>Sonuç olarak “neden çalışmıyor?” sorusu üzerine özgüvenle gidebilmek için önce eldeki sistemin çalışma prensibine vakıf olunuz. Sistemi yeterince anlayarak çalışması gerektiğini düşünüyorsanız sonraki adıma geçebilirsiniz.</p>\n\n<h3>4.3. Ara Sorgulamalar</h3>\n\n<p>İnsanların en iyi mantık yürüttüğü konulardan birisi, maddi menfaatlerini kaybetmenin söz konusu olmasıdır. Bu yüzden kurduğunuz sistem çalışmadığında yapmanız gerekenleri bulmak için şu durumda olduğunuzu varsayın:</p>\n<p><i>Birine aracılar eliyle para gönderdiniz; fakat alıcı paranın gelmediğini veya eksik geldiğini söylüyor. Ne yapardınız?</i></p>\n<p>Muhtemelen aracıları sorgulardınız. Peki ama ya yüze yakın sayıda aracı varsa? Üstelik para tek koldan değil de birkaç koldan aracılarla gönderilmişse? Hepsini tek tek sorgulamakla zaman kaybeder miydiniz? Yoksa daha hızlı bir yöntem mi uygulardınız?</p>\n<p>Okumaya devam etmeden önce biraz düşünüp bir yöntem geliştirmeye çalışınız.</p>\n<p>Yeterince düşündüyseniz okumaya devam edebilirsiniz. Aşağıda anlatılandan farklı ve daha iyi bir yöntem bulduğunuzu düşünüyorsanız bilmek isterim.</p>\n<p>Bulduğunuz yöntem muhtemelen ara sorgulamalar yapmaktır. Şöyle ki:</p>\n<p>Hangi ana kollarda para akışının aksadığına bakarsınız. Aksayan kolda ortadan bir aracıyı sorgularsınız. Onda problem olmamışsa onunla o kolun sonunun ortasından bir aracıyı, problem olmuşsa onunla o kolun başının ortasından bir aracıyı sorgularsınız. Böyle böyle devam ederek bir kolda yüz aracı olsa bile birkaç sorgulama ile aksama noktasını veya noktalarını bulursunuz.</p>\n<p>Tabii bu sorgulamaları yapabilmek ve yorumlayabilmek için sistemin nasıl işlediğini bilmeniz ve ara sorgulamalar yapmaya yetkili olmanız gerekir. Mesela bu yöntem İngiliz bankalarında işlemiyor. Benim başıma geldi ve İngiliz bankası paranın alıcının hesabına ulaşıp ulaşmadığının, alıcının kişisel bilgisi olduğunu ve göndericiye bile söylenemeyeceğini iddia etti!</p>\n<p>İşte bu yüzden "sistem neden çalışmıyor?" sorusundan önce "sistem neden çalışsın ki?" sorusuna cevabınız hazır olmalıdır. Bundan sonra yukarıdakine benzer yöntemle ister yazılım ister donanım olsun, sisteminizde ara ölçümler veya incelemeler yaparak hatayı teşhis etmeye çalışırsınız.</p>\n<p>Bu sorgulamalarda tek tek her elemanı sorgulamak pek kullanışlı bir yöntem değildir. Zira sistemin çalışmasını çok iyi bilseniz bile tek tek her eleman üzerindeki ölçümlerin ne olması gerektiğini bulmak için çok kafa yormanız gerekebilir. Sistemleri blok şemalarla tasarlamak veya incelemenin avantajlarından birisi işte budur. Blok blok sorgulama yaparsınız. Problemli blok teşhis edildikten sonra gerekirse içindeki esas problem çıkaran eleman ayrıca alt sorgulamalarla teşhis edilebilir. Blok içi teşhisle uğraşmak pek ekonomik olmayacaksa o blok toptan değiştirilebilir, bozuk elektronik kartı tamirle uğraşmak yerine sağlamıyla değiştirmek gibi.</p>\n<p>Hata, kâğıt üzerinde formüllerle yapılan bazı işlemlerde de olabilir. Burada yapılacak başlıca ara sorgulama yöntemlerinden birisi “birim doğrulama”dır. Eşitlik veya eşitsizliklerin her bir toplam terimi ve tarafları aynı birimli olmalıdır. Buna uymayan formülde hata olduğu anlaşılır. Birimlerle ilgili ayrıntılar, bu derste sonraki bir konu olarak anlatılacaktır.</p>\n<h3>4.4. Teoriyle Çelişen Durumlar</h3>\n<p>Peki sorgulamanın dibine kadar ulaşıp halen sorunu teşhis edememek mümkün müdür? Mümkündür; ama sakın pes etmeyin, işte burası tecrübenize tecrübe katacağınız aşamadır. Sorguladığınız en dip eleman, teoride varsayılana uymayan davranış gösteriyorsa doğal olarak onu sağlam biriyle değiştirmeyi düşünürsünüz. Ama değiştirmenize rağmen sorun devam edebilir. İyi kurulmuş bir teori ile pratik arasında ciddi bir uyuşmazlık olamaz. Uyuşmazlık varsa teori eksik varsayılmıştır ve şimdi o eksiği giderme zamanıdır. İşte bazı örnekler:</p>\n<p>● Teoride opampın +/- giriş uçları arasında sıfır volt gerilim olduğu varsayarsınız. Ama istediğiniz gibi çalışmayan opampın +/- uçları arasında sıfırdan farklı voltaj ölçebilir ve opampın bozuk olduğunu düşünebilirsiniz. Ama yeni opamp takınca da aynı ölçümleri alabilirsiniz. Çünkü varsayılan bu teori eksiktir. Doğrusu “normal beslenen opampın <u>çıkışı doyumda değilse</u>, +/- uçları arasındaki gerilim yaklaşık sıfırdır”.</p>\n<p>● Benzer şekilde BJT’lerin beyz-emiter arasında 0,7V gibi bir voltaj olduğunu varsayarsınız; ama bunun kesimdeki BJT için geçerli olmadığını unutmuş olabilirsiniz.</p>\n<p>● Yine benzer şekilde MOSFET’lerin geçidinden kayda değer bir akım çekilmediğini varsayarsınız; ama aslında bu DC çalışma için doğrudur. AC çalışmada ise, geçit kapasitans gibi davranarak kayda değer bir kapasitif akım çekebilir. Hatta güç MOSFET’lerini anahtarlarken geçitten ciddi değerde bir akım çekilir.</p>\n<p>● Simetrik olmayan, Mesela 0-12V ile beslenen ile bir opampın alt doyumda sıfır volt vermesini beklersiniz, ama o 2V civarı bir çıkış verebilir. Çünkü ister simetrik ister tek yönlü besleyin, ki opamp bununla değil kendi uçları arasındaki voltaj farklarıyla ilgilenir, alt doyumda alt besleme voltajının “output voltage swing” kadar üstünde, üst doyumda da üst besleme voltajının “output voltage swing” kadar altında çıkış voltajı verir. “Output voltage swing” ise genellikle 1-2V civarıdır.</p>\n<p>● Yazılımda "ve"/"veya" gibi karşılaştırmaların  veya karşılaştırma sonucuna göre işlemlerin yanlış yapıldığını düşünebilirsiniz. Bu durumda şu fıkrayı hatırlayınız:<br>\n<br>\n<i>Bir yazılımcıya bir sabah karısı demiş ki “Bakkala gidip 2 ekmek al. Taze yumurta gelmişse bir düzine al”. Adam gider ve biraz sonra elinde 12 ekmekle döner. Sebebini soran karısına, “Taze yumurta gelmiş!” der.</i>\n<br>\n<br>Yani bazı mantık yorumları derleyici tarafından sizin zannettiğinizden farklı sırayla işleniyor olabilir. Bu yüzden çoklu karşılaştırmalarda veya işlem gruplarında parantez kullanmak anlam kargaşasını önler.</p>\n<p>● Yazılımda, özellikle mikrodenetleyici yazılımında bazı çarpım hataları bulabilirsiniz. Aslında <code>.lst</code> dosyasını incelerseniz veya derleyici ayarlarını bilirseniz, değişkenlere ayrılan bayt veya bit sayısının sınırlı olmasından dolayı taşma olabildiğini ve üst bayt tarafından kırpıldığını anlayabilirsiniz. Benzer problem bazı hazır fonksiyonlarla da yaşanabilir.</p>\n<p>● Simülasyon veya deneylerde alınan ölçümlerin temel sistem formüllerinden birini sağlamadığını görebilirsiniz. Bunun başlıca sebepleri, işin içine karışan ölçüm gürültüsü, parametre veya modelleme belirsizliklerine aşırı duyarlılık, veya teoride sonsuz küçük kabul edilen <i>dt</i>, <i>dx</i> gibi diferansiyel adımların simülasyonlarda yeterince küçük seçilmemesi olabilmektedir.</p>\n<h3>4.5. Uyum sorunları</h3>\n<p>Bazen hata noktasını bulursunuz fakat nedenini anlayamazsınız. Hatta hatanın, hata gözlenen noktanın öncesinden mi sonrasından mı kaynaklandığına karar veremeyebilirsiniz. Böyle durumlarda hata gözlenen noktanın hemen öncesindeki veya sonrasındaki blokların veya elemanların bağlantılarını ayırarak test etmek faydalı olabilir. Eğer ayrıldıkları zaman iki taraf da sağlıklı çalışıyor, fakat bağlanınca problem çıkarıyorsa uyum problemi düşünülebilir. Birbirine uyumlu eleman veya bloklar kullanılarak bu sorunu aşmak denenebilir. Ancak geribesleme gibi etkileşimler de birlikte çalışmada sorun çıkarabileceğinden, durumu etraflıca değerlendirmeden büyük masrafa girecek denemeler tavsiye edilmez.</p>\n<h3>4.6. Sonuç</h3>\n<p>Burada sıralanan metotların hatayı bulmanızda ve çözmenizde yardımcı olması kuvvetle muhtemeldir. Ancak burada hesaba katılmayan pek çok hata mekanizmaları da mümkündür. Bu tecrübeler ve bilimsel yaklaşımlar ışığında düşünerek, çeşitli ihtimalleri değerlendirerek başka yöntemler de geliştirebilir, tecrübelerinizi artırabilirsiniz.</p>\n<p>İnsanın başlıca özelliklerinden birisi hata yaparak öğrenmesidir. Önemlisi, hataların üzerine cesaretle giderek sorunu çözebileceğinize özgüven duymanızdır. Ancak özgüven, sağlam bir temeli olana yakışır. Temelsiz özgüven aldatıcıdır.</p> \n'},{title:"5. Birim Uyumu",lastUpdate:"25.11.2021",html:'<a href="/projeders/aty1_konu05_birim_uyumu.ppsx"><i class="v-icon notranslate mdi mdi-download theme--light primary--text"></i> Birim Uyumu</a>'},{title:"6. İşlemlerde Belirsizlik Birikimi",lastUpdate:"17.12.2021",html:'<p>Sayısal ölçümlerde kaçınılmaz olarak bir miktar belirsizlik bulunur. Bu sayılarla işlem yaptıkça bu belirsizlikler işlemler boyunca birikerek devam eder.</p>\n<p>Sınavlarda hocalara sıkça sorulan bir soru: "<i>Sayıları virgülden (ondalık ayracından) sonra kaç rakam alalım?</i>"</p>\n<p>Bu sorunun sınavdaki tüm işlemleri kapsayan bir cevabı genellikle yoktur. Ancak sayılara, belirsizliklere ve işlemlere göre değişen kuralları vardır. Öncelikle sayılardaki belirsizliklerin ifade ediliş biçimlerini görelim. Sonra işlemler sırasında bu belirsizliklerin nasıl ilerlediğini görelim.</p>\n\n<h3>6.1 Belirsizliği İfade Etme Biçimleri</h3>\n<h4>6.1.1 Önemli rakamlarla belirtme</h4>\n<p>Ondalık ayracından (nokta ya da virgül) sonra sadece bilinen veya ilgilenilen kadar rakam yazılır. Son rakam yuvarlatılmıştır. Ondalık ayracından sonra en sağda olsa bile rakamın sıfır olduğu biliniyorsa bu sıfır yazılır. Böylece belirsizliğin derecesi ifade edilmiş olur.<br>\n<i>x</i> = 3,48 örneğinde 3,475 &le; <i>x</i> &lt; 3,485 demektir.<br>\n<i>x</i> = 12,0705 örneğinde 12,07045 &le; <i>x</i> &lt; 12,07055 demektir.<br>\n<i>x</i> = 3,290 örneğinde 3,2895 &le; <i>x</i> &lt; 3,2905 demektir. Bu kurala göre 3,29 ile 3,290 anlamca farklıdır!</p>\n<p>Ondalık ayracı kullanılmamışsa aksi belirtilmedikçe en sağdaki sıfırların belirsizlik ifade ettiği, bu sıfırlardan hemen önceki rakamın da yuvarlatıldığı varsayılır.<br>\n<i>Maçı stadda 80000 seyirci izledi.</i> Burada seyirci sayısı 75000\'den itibaren 85000\'e kadar olabilir demektir.<br>\n<i>67000 seyirci</i> denilseydi 66500\'den itibaren 67500\'e kadar olabilen seyirci anlaşılırdı.<br>\nSağdaki sıfırların bir kısmı belirli olduğu halde sıfır da olabilir. Bunu vurgulamak gerekirse belirli kısmının üzerine çizgi çizilir.<br>\n<br>\n<i>Işık hızı c = <span style="text-decoration:overline;">300</span>000 km/s ölçülmüştü.</i> Bu veriden anlaşılan, 299500 km/s &le; <i>c</i> &lt; 300500 km/s olduğudur.</p>\n<p>Aksi belirtilmedikçe <i>önemli rakamlar</i>,<br>\n&nbsp;&nbsp;&nbsp;● Ondalık ayracı kullanılmışsa yazılan tüm rakamlardır.<br>\n&nbsp;&nbsp;&nbsp;● Ondalık ayracı kullanılmamışsa sağdaki sıfırlar hariç yazılan tüm rakamlardır.<br>\n&nbsp;&nbsp;&nbsp;● Tam değerler için bütün rakamlar önemlidir. Önemli rakam sayısı sonsuz denilebilir. Mesela günümüzde ışık hızı tam olarak <i>c</i> = 299792458 m/s\'dir, çünkü yeni <i>metre</i> tanımı buna göredir. &pi;, &radic;<span style="text-decoration:overline;">3</span>, sin(70&deg;) gibi hesaplayıcımızda ihtiyacımızdan çok daha fazla belirli rakamla kullanabildiğimiz sayıları da tam düşünebiliriz. Burada "tam" derken tamsayı kastedilmiyor ama kolayca sayılabilen tamsayı değerler ve para tutarları da genellikle tam değerlerdir.<p>\n<p>Bilimsel (katsayı×10^kuvvet biçimi) gösterimlerde "önemli rakamlarla belirtme" kuralları, katsayı kısmı için geçerlidir.</p>\n\n<h4>6.1.2 &nbsp; &plusmn; belirsizlik</h4>\n<p>Belirsizliğin en belirgin ifade şeklidir.<br>\n<i>x</i> = 0,575 &plusmn; 0,003<br>\nörneğinde 0,572 &le; <i>x</i> &le; 0,578 demektir.</p>\n<p>Belirsizlik nadiren hem artı hem yönde değil de sadece tek yönlü olabilir. Mesela<br>\n<i>x</i> = 2,69<br>\ngösteriminde ondalık ayracından sonra yazılan son rakam aşağı yuvarlanmış ise<br>\n2,69 &le; <i>x</i> &lt; 2,70<br>\ndemektir. Fakat tek yönlü belirsizlik için yaygın bir notasyon olmadığı için bunu<br>\n<i>x</i> = 2,695 &plusmn; 0,005<br>\nbiçiminde yaygın notasyonlardan biriyle gösterebiliriz.</p>\n<p>Belirsizlik miktarı da genellikle belirsizlik içerdiği için belirsizliğin birden fazla önemli rakamla yazılması pek hoş karşılanmaz, hatta bazen aldatıcı sayılır. Ancak anlamlı rakam 1 ile başlıyorsa bir rakam daha yazılması uygundur. Asıl sayının belirsizliğe göre bilinemeyecek kadar fazla önemli rakamla yazılması da uygun değildir, aldatıcıdır.<br>\nAşağıdaki örneklerde kırmızıyla yazılan kısımlar uygunsuzdur:<br><br>\n<i>x</i> = 13,24 &plusmn; 0,03<font color="red">3</font><br>\n<i>x</i> = 22,180 &plusmn; 0,015 (Uygun)<br>\n<i>x</i> = 5,75<font color="red">6</font> &plusmn; 0,02</p>\n<p>Fakat onlu (<i>decimal</i>) yerine ikili (<i>binary</i>) ya da onaltılı (<i>hexadecimal</i>) gibi başka bir sayı sistemindeki bir rakamlık belirsizlik miktarının onluk sistemdeki karşılığının birden fazla önemli rakamla yazılması uygun sayılabilir.<br>\nMesela <br>\n<i>x</i> = <i>y</i> &plusmn; 2<sup>-3</sup> = <i>y</i> &plusmn; 0,125</p>\n\n<h4>6.1.3 &nbsp; &plusmn; oransal belirsizlik</h4>\n<p>Belirsizlik miktarı asıl sayıya oranla belirtilir. Oran ise genellikle yüzde (%) ile gösterilir.<br>\n<i>x</i> = 6,83 &plusmn; %1<br>\nörneğinde 6,76 &le; <i>x</i> &le; 6,90 demektir.</p>\n<p>Belirsizlik oranı sınırları da bir veya nadiren iki önemli rakamla belirtilmelidir, abartılması yersizdir. Mesela &plusmn; %1,5 olabilir ama &plusmn; %3,7 yerine yuvarlatıp %4 yazmak daha uygundur.</p>\n\n<h3>6.2 İşlem Sonuçlarındaki Belirsizlik</h3>\n<p>İşlemlerde farklı terimlerden gelen belirsizliklerin etkileri asla birbirini sadeleştirecek şekilde düşünülmez (gerçekte bazen sadeleşseler bile garantisi olmadığından), hep mutlak değerce belirsizliği artıracak şekilde etkileştikleri düşünülür. Fakat işlemlerden veya fonksiyondan dolayı belirsizlik azalıyor da olabilir.</p>\n\n<h4>6.2.1 Toplama ve çıkarmada</h4>\n<p>Belirsizliklerin oranları değil mutlak değerce miktarları toplanır. Yeni belirsizliğin de fazla detaylı yazılması yersizdir.<br>\n<i>x</i> = 52,1 &plusmn; 0,7<br>\n<i>y</i> = 1,25 &plusmn; 0,13<br>\n<i>x - y</i> = <font color="red">50,85 &plusmn; 0,83</font><br> gibi görünse de bu uygun değildir.<br>\n<i>x - y</i> = 50,9 &plusmn; 0,8 yazılmalıdır.</p>\n<p>&plusmn; belirsizlik gösterilmeden sadece önemli rakamlarla belirsizlik taşınıyorsa, toplama ve çıkarma işleminin sonucu, büyük olan belirsizliğe göre yazılır. Fakat aynı belirsizlik seviyesindeki çok sayıda sayıyı toplayıp çıkartıyorsak sonuçtaki belirsizlik, sayıların adedi ile her birinin belirsizliğinin çarpımı kadar olur.</p>\n<p>Aşağıdaki örnekte kuruş çözünürlüğünde verilen para miktarları tamdır. Bu yüzden toplamları da tamdır (sol sütun). Ancak diyelim ki bunları zihinden kabaca toplamak istiyorsak ve lira cinsinden tamsayıya yuvarlatarak işlem yapıyorsak, her biri &plusmn; 0,5 TL belirsizliğinde 8 adet sayı olduğundan, sonuç &plusmn; 4 TL belirsizliğindedir. Bu da, belirsizliği bir rakam daha artırılarak 10\'un katlarına yuvarlatılmış (&plusmn; 5 TL) belirsizliğe daha yakın olduğundan, sonuç 10\'un katlarına yuvarlatılmayı hak ediyordur.<p>\n<table>\n  <tr><th>Sıra</th><th>Tam (TL)</th><th>Yaklaşık (&plusmn;0,5)(TL)</th></tr>\n  <tr><td>1</td><td>147,13</td><td>147</td></tr>\n  <tr><td>2</td><td>62,25</td><td>62</td></tr>\n  <tr><td>3</td><td>18,95</td><td>19</td></tr>\n  <tr><td>4</td><td>3,37</td><td>3</td></tr>\n  <tr><td>5</td><td>26,43</td><td>26</td></tr>\n  <tr><td>6</td><td>51,86</td><td>52</td></tr>\n  <tr><td>7</td><td>37,60</td><td>38</td></tr>\n  <tr><td>8</td><td>75,50</td><td>76</td></tr>\n  <tr><td>Toplam</td><td>423,09</td><td>423 &plusmn; 4 &approx; 420</td></tr>\n</table>\n<p>Bu örnekte artı ve eksi yöndeki yuvarlamalar birbirini kısmen yok ettiği için hesaplanan belirsizlikten daha hassas sonuç bulundu ama bunun garantisi yoktur. Bu belirsizliğin standart sapmasını değiştirir ama o konuya girmeyeceğiz.</p>\n\n<h4>6.2.2 Çarpma ve bölmede</h4>\n<p>Hem çarpmada hem bölmede belirsizlik <u>oranları</u> toplanır. Sonuçta belirsizliğe göre fazla detay varsa, sonuç belirsizliğine uygun yerden yuvarlatılır. Sonuç belirsizliğinde de yersiz detay varsa o da yuvarlatılır.</br>\n<i>x</i> = 277 &plusmn; %1,8<br>\n<i>y</i> = 18,47 &plusmn; %0,3<br>\n<i>x * y</i> = <font color="red">5116,19 &plusmn; %2,1</font><br> gibi görünse de detaylar yersizdir.<br>\n<i>x * y</i> = 5100 &plusmn; %2 yazılmalıdır.</p>\n<p>Belirsizlik &plusmn; ile değil de sadece önemli rakamlarla ifade edilmişse, çarpma veya bölmenin sonucu, bu iki sayıdan daha az sayıda önemli rakamlı olanınki kadar önemli rakama yuvarlatılarak yazılmalıdır.<br>\n<i>x</i> = 3200<br>\n<i>y</i> = 2,51<br>\n<i>x * y</i> = <font color="red">8032</font><br> gibi görünse de detaylar yersizdir.<br>\n<i>x * y</i> = <span style="text-decoration:overline;">80</span>00 (iki önemli rakamla) yazılmalıdır.</p>\n<p>Bölmede de kural aynıdır. Bilimsel gösterimli sayılarda da bu kural katsayı kısmında aynı şekilde uygulanır.</p>\n\n<h4>6.2.3 Genel işlem veya fonksiyonlarda</h4>\n<p>● Belirsizlik içeren sayıların her biri yerine birer sembol yazılarak işlem bir fonksiyon şeklinde yazılır. Fonksiyonun diferansiyeli (türevle aynı şey değil) alınır. Her sembolün diferansiyeli anlamına gelen "<i>d</i>" operatörü yerine belirsizliği anlamında "&Delta;" yazılır. Bu belirsizlik ifadesindeki toplam terimlerinin eksi olup olmamasına bakılmaksızın mutlak değerce toplama dönüştürülür. Şimdi sayılar ve belirsizlikler (&Delta;\'lılar) yerine yazılarak sonucun belirsizliği genellikle yeterli yaklaşıklıkla bulunur.</p>\n<p><u><i>Örnek:</i></u> <i>y</i> = <i>a</i>*<i>x</i> + 2*cos&theta;\nformülündeki sembollerdeki belirsizlikler<br>\n&Delta;<i>a</i> = 0,02 ; &nbsp;&Delta;<i>x</i> = 0,15 ; &nbsp;&Delta;&theta; = 0,007 rad\n<br> olduğuna göre,<br>\n<i>a</i> = 0,91 ; &nbsp; <i>x</i> = 2,36 ; &nbsp; &theta; = 1,442 rad<br>\nkomşuluğunda <i>y</i> \'deki belirsizlik &Delta;<i>y</i> ne kadardır?<br>\n<br>\n<i>Çözüm: dy = x*da + a*dx</i> - 2*sin&theta;*<i>d</i>&theta;<br><br>\n&Delta;<i>y</i> = <i>x</i>*&Delta;<i>a</i> + <i>a</i>*&Delta;<i>x</i> + 2*sin&theta;*&Delta;&theta;<br><br>\n&Delta;<i>y</i> = 2,36*0,02 + 0,91*0,15 + 2*sin(1,442)*0,007 = 0,2<br><br>\n<i>y</i> değerini de bularak birlikte verelim:<br><br>\n<i>y</i> = 0,91*2,36 + 2*cos(1,442) = 2,4<br><br>\nYani <i>y</i> = 2,4 &plusmn; 0,2<br><br>\nİstenirse <i>y</i> = 2,4 &plusmn; %8 diye de yazılabilir (0,2/2,4 &approx; 0,08 olduğu için).</p>\n<p>● Eğer formül <u>sadece</u> belirsizlik içeren sembollerin çeşitli kuvvetlerinin çarpımı (veya bölümü, kesri) ise <u>oransal</u> belirsizlik, tek tek sembollerdeki belirsizlikler cinsinden basit bir formül olarak da bulunabilir. Bunun için az önce belirtilen işlemler, fonksiyonun doğal logaritmasının (<i>ln</i>) diferansiyeline uygulanır.</p>\n<p><u><i>Örnek:</i></u> Silindir şeklindeki bir cismin kütlesi <i>m</i>, taban yarıçapı <i>r</i>, yüksekliği <i>h</i> ölçülerek kütlesel yoğunluğu &rho; hesaplanacaktır. Hesaplanan yoğunluktaki oransal belirsizliği (&Delta;&rho;/&rho;), her bir ölçümdeki oransal belirsizlikler cinsinden formül halinde yazınız. Sonra &Delta;<i>m</i>/<i>m</i> = %0,1 ; &Delta;<i>r</i>/<i>r</i> = %0,07 ; &Delta;<i>h</i>/<i>h</i> = %0,09 belirsizlikleri için &Delta;&rho;/&rho; \'yu hesaplayınız. &pi; sayısının 3,14 alınmasının getirdiği (&pi;-3,14)/&pi; = 0,0005 = %0,05 hatayı da belirsizlik (&Delta;&pi;/&pi;) olarak hesaba katınız.<br>\n<br>\n<i>Çözüm:</i> Silindirin hacmi = &pi;*<i>r</i><sup>2</sup>*<i>h</i> olduğundan<br><br>\nYoğunluk = &rho; = <i>m</i> / (&pi;*<i>r</i><sup>2</sup>*<i>h</i>)<br><br>\n<i>ln</i>(&rho;) = <i>ln</i>(<i>m</i>) - <i>ln</i>(&pi;) - 2*<i>ln</i>(<i>r</i>) - <i>ln</i>(<i>h</i>)<br><br>\n&pi; için de hata olacağından onu da değişken gibi düşüneceğiz:<br><br>\n(<i>d</i>&rho;/&rho;) = (<i>dm/m</i>) - (<i>d</i>&pi;/&pi;) - 2*(<i>dr/r</i>) - (<i>dh/h</i>)<br><br>\n(&Delta;&rho;/&rho;) = (&Delta;<i>m/m</i>) + (&Delta;&pi;/&pi;) + 2*(&Delta;<i>r/r</i>) + (&Delta;<i>h/h</i>)<br><br>\nbulunur. Verilen oransal belirsizlikleri yerine yazarsak yoğunluk hesabındaki oransal hata:<br><br>\n\n(&Delta;&rho;/&rho;) = %0,1 + %0,05 + 2*(%0,07) + %0,09 &approx; %0,4 bulunur.</p>\n\n<p>Görüldüğü gibi oransal hata, bu durumda parametrelerin değerlerinden bağımsız, sadece onlardaki oransal belirsizliklere bağlı. 6.2.2 başlığı altında, belirsizlik oranlarının toplandığının söylenme nedeni de budur.</p>'}]}},methods:{viewAssignment:function(a){this.dialogAssignment=a,this.dialog=!0}}},d=r,t=e("2877"),s=e("6544"),m=e.n(s),k=e("8336"),b=e("b0af"),o=e("99d9"),u=e("62ad"),y=e("169a"),z=e("132d"),p=e("d903"),g=e("604c"),c=e("0fd9"),v=e("f665"),h=e("1e6c"),f=Object(t["a"])(d,n,l,!1,null,null,null);i["default"]=f.exports;m()(f,{VBtn:k["a"],VCard:b["a"],VCardText:o["b"],VCardTitle:o["c"],VCol:u["a"],VDialog:y["a"],VIcon:z["a"],VItem:p["a"],VItemGroup:g["b"],VRow:c["a"],VWindow:v["a"],VWindowItem:h["a"]})}}]);
//# sourceMappingURL=chunk-2d225448.428875de.js.map